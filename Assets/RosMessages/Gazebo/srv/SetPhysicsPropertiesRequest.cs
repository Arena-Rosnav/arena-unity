//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Gazebo
{
    [Serializable]
    public class SetPhysicsPropertiesRequest : Message
    {
        public const string k_RosMessageName = "gazebo_msgs/SetPhysicsProperties";
        public override string RosMessageName => k_RosMessageName;

        //  sets pose and twist of a link.  All children link poses/twists of the URDF tree will be updated accordingly
        public double time_step;
        //  dt in seconds
        public double max_update_rate;
        //  throttle maximum physics update rate
        public Geometry.Vector3Msg gravity;
        //  gravity vector (e.g. earth ~[0,0,-9.81])
        public ODEPhysicsMsg ode_config;
        //  configurations for ODE

        public SetPhysicsPropertiesRequest()
        {
            this.time_step = 0.0;
            this.max_update_rate = 0.0;
            this.gravity = new Geometry.Vector3Msg();
            this.ode_config = new ODEPhysicsMsg();
        }

        public SetPhysicsPropertiesRequest(double time_step, double max_update_rate, Geometry.Vector3Msg gravity, ODEPhysicsMsg ode_config)
        {
            this.time_step = time_step;
            this.max_update_rate = max_update_rate;
            this.gravity = gravity;
            this.ode_config = ode_config;
        }

        public static SetPhysicsPropertiesRequest Deserialize(MessageDeserializer deserializer) => new SetPhysicsPropertiesRequest(deserializer);

        private SetPhysicsPropertiesRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.time_step);
            deserializer.Read(out this.max_update_rate);
            this.gravity = Geometry.Vector3Msg.Deserialize(deserializer);
            this.ode_config = ODEPhysicsMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.time_step);
            serializer.Write(this.max_update_rate);
            serializer.Write(this.gravity);
            serializer.Write(this.ode_config);
        }

        public override string ToString()
        {
            return "SetPhysicsPropertiesRequest: " +
            "\ntime_step: " + time_step.ToString() +
            "\nmax_update_rate: " + max_update_rate.ToString() +
            "\ngravity: " + gravity.ToString() +
            "\node_config: " + ode_config.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
