//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Gazebo
{
    [Serializable]
    public class GetWorldPropertiesResponse : Message
    {
        public const string k_RosMessageName = "gazebo_msgs/GetWorldProperties";
        public override string RosMessageName => k_RosMessageName;

        public double sim_time;
        //  current sim time
        public string[] model_names;
        //  list of models in the world
        public bool rendering_enabled;
        //  if X is used
        public bool success;
        //  return true if get successful
        public string status_message;
        //  comments if available

        public GetWorldPropertiesResponse()
        {
            this.sim_time = 0.0;
            this.model_names = new string[0];
            this.rendering_enabled = false;
            this.success = false;
            this.status_message = "";
        }

        public GetWorldPropertiesResponse(double sim_time, string[] model_names, bool rendering_enabled, bool success, string status_message)
        {
            this.sim_time = sim_time;
            this.model_names = model_names;
            this.rendering_enabled = rendering_enabled;
            this.success = success;
            this.status_message = status_message;
        }

        public static GetWorldPropertiesResponse Deserialize(MessageDeserializer deserializer) => new GetWorldPropertiesResponse(deserializer);

        private GetWorldPropertiesResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.sim_time);
            deserializer.Read(out this.model_names, deserializer.ReadLength());
            deserializer.Read(out this.rendering_enabled);
            deserializer.Read(out this.success);
            deserializer.Read(out this.status_message);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.sim_time);
            serializer.WriteLength(this.model_names);
            serializer.Write(this.model_names);
            serializer.Write(this.rendering_enabled);
            serializer.Write(this.success);
            serializer.Write(this.status_message);
        }

        public override string ToString()
        {
            return "GetWorldPropertiesResponse: " +
            "\nsim_time: " + sim_time.ToString() +
            "\nmodel_names: " + System.String.Join(", ", model_names.ToList()) +
            "\nrendering_enabled: " + rendering_enabled.ToString() +
            "\nsuccess: " + success.ToString() +
            "\nstatus_message: " + status_message.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
