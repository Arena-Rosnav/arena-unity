//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Gazebo
{
    [Serializable]
    public class GetLightPropertiesResponse : Message
    {
        public const string k_RosMessageName = "gazebo_msgs/GetLightProperties";
        public override string RosMessageName => k_RosMessageName;

        public Std.ColorRGBAMsg diffuse;
        //  diffuse color as red, green, blue, alpha
        public double attenuation_constant;
        public double attenuation_linear;
        public double attenuation_quadratic;
        public bool success;
        //  return true if get successful
        public string status_message;
        //  comments if available

        public GetLightPropertiesResponse()
        {
            this.diffuse = new Std.ColorRGBAMsg();
            this.attenuation_constant = 0.0;
            this.attenuation_linear = 0.0;
            this.attenuation_quadratic = 0.0;
            this.success = false;
            this.status_message = "";
        }

        public GetLightPropertiesResponse(Std.ColorRGBAMsg diffuse, double attenuation_constant, double attenuation_linear, double attenuation_quadratic, bool success, string status_message)
        {
            this.diffuse = diffuse;
            this.attenuation_constant = attenuation_constant;
            this.attenuation_linear = attenuation_linear;
            this.attenuation_quadratic = attenuation_quadratic;
            this.success = success;
            this.status_message = status_message;
        }

        public static GetLightPropertiesResponse Deserialize(MessageDeserializer deserializer) => new GetLightPropertiesResponse(deserializer);

        private GetLightPropertiesResponse(MessageDeserializer deserializer)
        {
            this.diffuse = Std.ColorRGBAMsg.Deserialize(deserializer);
            deserializer.Read(out this.attenuation_constant);
            deserializer.Read(out this.attenuation_linear);
            deserializer.Read(out this.attenuation_quadratic);
            deserializer.Read(out this.success);
            deserializer.Read(out this.status_message);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.diffuse);
            serializer.Write(this.attenuation_constant);
            serializer.Write(this.attenuation_linear);
            serializer.Write(this.attenuation_quadratic);
            serializer.Write(this.success);
            serializer.Write(this.status_message);
        }

        public override string ToString()
        {
            return "GetLightPropertiesResponse: " +
            "\ndiffuse: " + diffuse.ToString() +
            "\nattenuation_constant: " + attenuation_constant.ToString() +
            "\nattenuation_linear: " + attenuation_linear.ToString() +
            "\nattenuation_quadratic: " + attenuation_quadratic.ToString() +
            "\nsuccess: " + success.ToString() +
            "\nstatus_message: " + status_message.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
