//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.BuiltinInterfaces;

namespace RosMessageTypes.Pedsim
{
    [Serializable]
    public class TrackedPersonMsg : Message
    {
        public const string k_RosMessageName = "pedsim_msgs/TrackedPerson";
        public override string RosMessageName => k_RosMessageName;

        //  Message defining a tracked person
        // 
        public string track_id;
        //  unique identifier of the target, consistent over time
        public bool is_occluded;
        //  if the track is currently not observable in a physical way
        public bool is_matched;
        //  if the track is currently matched by a detection
        public string detection_id;
        //  id of the corresponding detection in the current cycle (undefined if occluded)
        public DurationMsg age;
        //  age of the track
        //  The following fields are extracted from the Kalman state x and its covariance C
        public Geometry.PoseWithCovarianceMsg pose;
        //  pose of the track (z value and orientation might not be set, check if corresponding variance on diagonal is > 99999)
        public Geometry.TwistWithCovarianceMsg twist;
        //  velocity of the track (z value and rotational velocities might not be set, check if corresponding variance on diagonal is > 99999)

        public TrackedPersonMsg()
        {
            this.track_id = "";
            this.is_occluded = false;
            this.is_matched = false;
            this.detection_id = "";
            this.age = new DurationMsg();
            this.pose = new Geometry.PoseWithCovarianceMsg();
            this.twist = new Geometry.TwistWithCovarianceMsg();
        }

        public TrackedPersonMsg(string track_id, bool is_occluded, bool is_matched, string detection_id, DurationMsg age, Geometry.PoseWithCovarianceMsg pose, Geometry.TwistWithCovarianceMsg twist)
        {
            this.track_id = track_id;
            this.is_occluded = is_occluded;
            this.is_matched = is_matched;
            this.detection_id = detection_id;
            this.age = age;
            this.pose = pose;
            this.twist = twist;
        }

        public static TrackedPersonMsg Deserialize(MessageDeserializer deserializer) => new TrackedPersonMsg(deserializer);

        private TrackedPersonMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.track_id);
            deserializer.Read(out this.is_occluded);
            deserializer.Read(out this.is_matched);
            deserializer.Read(out this.detection_id);
            this.age = DurationMsg.Deserialize(deserializer);
            this.pose = Geometry.PoseWithCovarianceMsg.Deserialize(deserializer);
            this.twist = Geometry.TwistWithCovarianceMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.track_id);
            serializer.Write(this.is_occluded);
            serializer.Write(this.is_matched);
            serializer.Write(this.detection_id);
            serializer.Write(this.age);
            serializer.Write(this.pose);
            serializer.Write(this.twist);
        }

        public override string ToString()
        {
            return "TrackedPersonMsg: " +
            "\ntrack_id: " + track_id.ToString() +
            "\nis_occluded: " + is_occluded.ToString() +
            "\nis_matched: " + is_matched.ToString() +
            "\ndetection_id: " + detection_id.ToString() +
            "\nage: " + age.ToString() +
            "\npose: " + pose.ToString() +
            "\ntwist: " + twist.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
