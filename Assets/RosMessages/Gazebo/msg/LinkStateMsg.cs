//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Gazebo
{
    [Serializable]
    public class LinkStateMsg : Message
    {
        public const string k_RosMessageName = "gazebo_msgs/LinkState";
        public override string RosMessageName => k_RosMessageName;

        //  @todo: FIXME: sets pose and twist of a link.  All children link poses/twists of the URDF tree are not updated accordingly, but should be.
        public string link_name;
        //  link name, link_names are in gazebo scoped name notation, [model_name::body_name]
        public Geometry.PoseMsg pose;
        //  desired pose in reference frame
        public Geometry.TwistMsg twist;
        //  desired twist in reference frame
        public string reference_frame;
        //  set pose/twist relative to the frame of this link/body
        //  leave empty or "world" or "map" defaults to world-frame

        public LinkStateMsg()
        {
            this.link_name = "";
            this.pose = new Geometry.PoseMsg();
            this.twist = new Geometry.TwistMsg();
            this.reference_frame = "";
        }

        public LinkStateMsg(string link_name, Geometry.PoseMsg pose, Geometry.TwistMsg twist, string reference_frame)
        {
            this.link_name = link_name;
            this.pose = pose;
            this.twist = twist;
            this.reference_frame = reference_frame;
        }

        public static LinkStateMsg Deserialize(MessageDeserializer deserializer) => new LinkStateMsg(deserializer);

        private LinkStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.link_name);
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.twist = Geometry.TwistMsg.Deserialize(deserializer);
            deserializer.Read(out this.reference_frame);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.link_name);
            serializer.Write(this.pose);
            serializer.Write(this.twist);
            serializer.Write(this.reference_frame);
        }

        public override string ToString()
        {
            return "LinkStateMsg: " +
            "\nlink_name: " + link_name.ToString() +
            "\npose: " + pose.ToString() +
            "\ntwist: " + twist.ToString() +
            "\nreference_frame: " + reference_frame.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
