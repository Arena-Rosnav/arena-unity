//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Gazebo
{
    [Serializable]
    public class SpawnModelRequest : Message
    {
        public const string k_RosMessageName = "gazebo_msgs/SpawnModel";
        public override string RosMessageName => k_RosMessageName;

        public string model_name;
        //  name of the model to be spawn
        public string model_xml;
        //  this should be an urdf or gazebo xml
        public string robot_namespace;
        //  spawn robot and all ROS interfaces under this namespace
        public Geometry.PoseMsg initial_pose;
        //  only applied to canonical body
        public string reference_frame;
        //  initial_pose is defined relative to the frame of this model/body
        //  if left empty or "world", then gazebo world frame is used
        //  if non-existent model/body is specified, an error is returned
        //    and the model is not spawned

        public SpawnModelRequest()
        {
            this.model_name = "";
            this.model_xml = "";
            this.robot_namespace = "";
            this.initial_pose = new Geometry.PoseMsg();
            this.reference_frame = "";
        }

        public SpawnModelRequest(string model_name, string model_xml, string robot_namespace, Geometry.PoseMsg initial_pose, string reference_frame)
        {
            this.model_name = model_name;
            this.model_xml = model_xml;
            this.robot_namespace = robot_namespace;
            this.initial_pose = initial_pose;
            this.reference_frame = reference_frame;
        }

        public static SpawnModelRequest Deserialize(MessageDeserializer deserializer) => new SpawnModelRequest(deserializer);

        private SpawnModelRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.model_name);
            deserializer.Read(out this.model_xml);
            deserializer.Read(out this.robot_namespace);
            this.initial_pose = Geometry.PoseMsg.Deserialize(deserializer);
            deserializer.Read(out this.reference_frame);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.model_name);
            serializer.Write(this.model_xml);
            serializer.Write(this.robot_namespace);
            serializer.Write(this.initial_pose);
            serializer.Write(this.reference_frame);
        }

        public override string ToString()
        {
            return "SpawnModelRequest: " +
            "\nmodel_name: " + model_name.ToString() +
            "\nmodel_xml: " + model_xml.ToString() +
            "\nrobot_namespace: " + robot_namespace.ToString() +
            "\ninitial_pose: " + initial_pose.ToString() +
            "\nreference_frame: " + reference_frame.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
